// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskGarden.Infrastructure;

#nullable disable

namespace TaskGarden.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "60be6696-95e2-4d01-a263-a86bfa15c1eb",
                            Email = "demo1@demo.com",
                            EmailConfirmed = false,
                            FirstName = "Demo",
                            LastName = "One",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEMO1@DEMO.COM",
                            NormalizedUserName = "DEMO1@DEMO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELZzlAo3gHWkt42UveWsR+n7HeRmWz52VUHrQNI2YTnDb0KfabkiQxuoJTD2KY5Rmg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2889e08f-8ecf-43ba-b13b-9b9a5d3dcc2e",
                            TwoFactorEnabled = false,
                            UserName = "demo1@demo.com"
                        },
                        new
                        {
                            Id = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7546b970-2a72-44a8-aa0c-5e7f7acba506",
                            Email = "demo2@demo.com",
                            EmailConfirmed = false,
                            FirstName = "Demo",
                            LastName = "Two",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEMO2@DEMO.COM",
                            NormalizedUserName = "DEMO2@DEMO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOneriB5vRg6ltc4D5nCI5mIgIZlsBqF143jcVj0cKMoqAN4D4WWBgnQep3ahHDy8A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c85cf87a-8890-4a66-abca-61212555aff1",
                            TwoFactorEnabled = false,
                            UserName = "demo2@demo.com"
                        },
                        new
                        {
                            Id = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e5d48f94-b30c-4c96-a551-bce8d7e20714",
                            Email = "demo3@demo.com",
                            EmailConfirmed = false,
                            FirstName = "Demo",
                            LastName = "Three",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEMO3@DEMO.COM",
                            NormalizedUserName = "DEMO3@DEMO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMa7BkdOzqqBOZkpqnezsLCnEZoRy1EaFCrpZh9hGR/2rrCx6K5DcP41dmRzbIkCYA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "26b9c8e6-8f7e-4f79-9637-9ee022c3bb10",
                            TwoFactorEnabled = false,
                            UserName = "demo3@demo.com"
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "lime",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8100),
                            Name = "Groceries",
                            Tag = "shopping-cart",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8106),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 2,
                            Color = "red",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8112),
                            Name = "Bills",
                            Tag = "banknote",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8113),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 3,
                            Color = "blue",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8114),
                            Name = "Entertainment",
                            Tag = "roller-coaster",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8114),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 4,
                            Color = "yellow",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8116),
                            Name = "Travel",
                            Tag = "plane",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8117),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 5,
                            Color = "grape",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8118),
                            Name = "School",
                            Tag = "university",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8118),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 6,
                            Color = "cyan",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8120),
                            Name = "Groceries",
                            Tag = "shopping-cart",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8120),
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259"
                        },
                        new
                        {
                            Id = 7,
                            Color = "orange",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8121),
                            Name = "Bills",
                            Tag = "receipt",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8121),
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259"
                        },
                        new
                        {
                            Id = 8,
                            Color = "indigo",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8123),
                            Name = "Groceries",
                            Tag = "shopping-basket",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8123),
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00"
                        },
                        new
                        {
                            Id = 9,
                            Color = "teal",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8223),
                            Name = "Bills",
                            Tag = "hand-coins",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8223),
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00"
                        },
                        new
                        {
                            Id = 10,
                            Color = "pink",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8225),
                            Name = "Entertainment",
                            Tag = "theater",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8225),
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00"
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvitedUserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InviterUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TaskListId")
                        .HasColumnType("integer");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("InviterUserId");

                    b.HasIndex("TaskListId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.ToTable("TaskLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8693),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "This week's shopping list for ShopRite",
                            IsCompleted = false,
                            Name = "ShopRite shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8694)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8697),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "This week's shopping list for Walmart",
                            IsCompleted = false,
                            Name = "Walmart shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8698)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8699),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Monthly rent payment reminders",
                            IsCompleted = false,
                            Name = "Rent payment",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8699)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8760),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Electricity bill payment reminders",
                            IsCompleted = false,
                            Name = "Electricity Bill",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8760)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8762),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "List of movies to watch this weekend",
                            IsCompleted = false,
                            Name = "Movie night",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8769)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8771),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Track upcoming concerts and events",
                            IsCompleted = false,
                            Name = "Concert Tickets",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8771)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8777),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Plan and book flights and hotels",
                            IsCompleted = false,
                            Name = "Vacation Planning",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8777)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8778),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Track deadlines for assignments",
                            IsCompleted = false,
                            Name = "Assignment Deadlines",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8778)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8779),
                            CreatedById = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            Description = "Weekly shopping list for Giant",
                            IsCompleted = false,
                            Name = "Giant shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8780)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8781),
                            CreatedById = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            Description = "Track Internet bill payments",
                            IsCompleted = false,
                            Name = "Internet Bill",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8781)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8782),
                            CreatedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            Description = "Grocery list for SuperMart",
                            IsCompleted = false,
                            Name = "SuperMart shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8783)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8784),
                            CreatedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            Description = "List of items for the local market",
                            IsCompleted = false,
                            Name = "Local Market shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8784)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8785),
                            CreatedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            Description = "Keep track of monthly mobile bills",
                            IsCompleted = false,
                            Name = "Mobile Bill",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8785)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8787),
                            CreatedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            Description = "List of fun things to do this weekend",
                            IsCompleted = false,
                            Name = "Weekend Fun Activities",
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(8787)
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompletedById")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<int>("TaskListId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CompletedById");

                    b.HasIndex("TaskListId");

                    b.ToTable("TaskListItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9683),
                            Description = "Buy apples",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9684)
                        },
                        new
                        {
                            Id = 2,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9686),
                            Description = "Buy bananas",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9686)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9688),
                            Description = "Buy oranges",
                            IsCompleted = false,
                            Position = 3,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9688)
                        },
                        new
                        {
                            Id = 4,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9689),
                            Description = "Buy milk",
                            IsCompleted = true,
                            Position = 4,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9689)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9690),
                            Description = "Buy eggs",
                            IsCompleted = false,
                            Position = 5,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9690)
                        },
                        new
                        {
                            Id = 6,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9691),
                            Description = "Buy toothpaste",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9691)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9692),
                            Description = "Buy toothbrush",
                            IsCompleted = false,
                            Position = 2,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9692)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9693),
                            Description = "Buy shampoo",
                            IsCompleted = false,
                            Position = 3,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9693)
                        },
                        new
                        {
                            Id = 9,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9694),
                            Description = "Buy conditioner",
                            IsCompleted = true,
                            Position = 4,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9694)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9695),
                            Description = "Buy soap",
                            IsCompleted = false,
                            Position = 5,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9695)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9696),
                            Description = "Pay rent",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 3,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9696)
                        },
                        new
                        {
                            Id = 12,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9697),
                            Description = "Confirm payment",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 3,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9697)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9698),
                            Description = "Pay electricity bill",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 4,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9698)
                        },
                        new
                        {
                            Id = 14,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9699),
                            Description = "Check bill amount",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 4,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9700)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9701),
                            Description = "Buy popcorn",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 5,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9701)
                        },
                        new
                        {
                            Id = 16,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9702),
                            Description = "Pick movie",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 5,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9702)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9703),
                            Description = "Prepare snacks",
                            IsCompleted = false,
                            Position = 3,
                            TaskListId = 5,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9703)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9704),
                            Description = "Buy concert tickets",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 6,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9704)
                        },
                        new
                        {
                            Id = 19,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9705),
                            Description = "Confirm concert date",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 6,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9705)
                        },
                        new
                        {
                            Id = 20,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9706),
                            Description = "Book flights",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 7,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9706)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9707),
                            Description = "Reserve hotel",
                            IsCompleted = false,
                            Position = 2,
                            TaskListId = 7,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9707)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9708),
                            Description = "Plan itinerary",
                            IsCompleted = false,
                            Position = 3,
                            TaskListId = 7,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9708)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9709),
                            Description = "Submit math assignment",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 8,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9709)
                        },
                        new
                        {
                            Id = 24,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9710),
                            Description = "Submit history assignment",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 8,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9710)
                        },
                        new
                        {
                            Id = 25,
                            CompletedById = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9711),
                            Description = "Buy bread",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 9,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9711)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9712),
                            Description = "Buy butter",
                            IsCompleted = false,
                            Position = 2,
                            TaskListId = 9,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9712)
                        },
                        new
                        {
                            Id = 27,
                            CompletedById = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9713),
                            Description = "Pay internet bill",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 10,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9713)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9714),
                            Description = "Buy sugar",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 11,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9714)
                        },
                        new
                        {
                            Id = 29,
                            CompletedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9715),
                            Description = "Buy rice",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 11,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9715)
                        },
                        new
                        {
                            Id = 30,
                            CompletedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9716),
                            Description = "Buy tomatoes",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 12,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9716)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9717),
                            Description = "Pay mobile bill",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 13,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9717)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9718),
                            Description = "Plan weekend trip",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 14,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9718)
                        },
                        new
                        {
                            Id = 33,
                            CompletedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9719),
                            Description = "Book tickets",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 14,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9719)
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskListMember", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("TaskListId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "TaskListId");

                    b.HasIndex("TaskListId");

                    b.ToTable("TaskListMembers");

                    b.HasData(
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9453),
                            Id = 1,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9453)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9456),
                            Id = 2,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9456)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9457),
                            Id = 3,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9458)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9458),
                            Id = 4,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9459)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9459),
                            Id = 5,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9460)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 6,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9460),
                            Id = 6,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9460)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9461),
                            Id = 7,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9461)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9462),
                            Id = 8,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9462)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 9,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9463),
                            Id = 9,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9463)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9464),
                            Id = 10,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9464)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 11,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9465),
                            Id = 11,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9465)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 12,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9466),
                            Id = 12,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9466)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 13,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9466),
                            Id = 13,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9467)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 14,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9467),
                            Id = 14,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9468)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9468),
                            Id = 15,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9469)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9469),
                            Id = 16,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9469)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9470),
                            Id = 17,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9470)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9471),
                            Id = 18,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9471)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9522),
                            Id = 19,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9523)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 6,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9524),
                            Id = 20,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9524)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9525),
                            Id = 21,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9525)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9526),
                            Id = 22,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9526)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 9,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9527),
                            Id = 23,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9527)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9528),
                            Id = 24,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9528)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 11,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9529),
                            Id = 25,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9529)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 12,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9530),
                            Id = 26,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9530)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 13,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9531),
                            Id = 27,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9531)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 14,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9532),
                            Id = 28,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9532)
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.UserTaskListCategory", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("TaskListId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "TaskListId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TaskListId");

                    b.ToTable("UserTaskListCategories");

                    b.HasData(
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9277),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9278)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9281),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9282)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9282),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9282)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9283),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9283)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 5,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9284),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9284)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 6,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9285),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9285)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 7,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9286),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9286)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 8,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9287),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9287)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 9,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9287),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9288)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 10,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9288),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9289)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 11,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9289),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9289)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 12,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9290),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9290)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 13,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9291),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9291)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 14,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9291),
                            UpdatedAt = new DateTime(2025, 3, 15, 23, 18, 51, 946, DateTimeKind.Utc).AddTicks(9292)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Category", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Invitation", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "InviterUser")
                        .WithMany()
                        .HasForeignKey("InviterUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.TaskList", "TaskList")
                        .WithMany()
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InviterUser");

                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Session", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskList", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.Category", null)
                        .WithMany("TaskLists")
                        .HasForeignKey("CategoryId");

                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskListItem", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "CompletedBy")
                        .WithMany()
                        .HasForeignKey("CompletedById");

                    b.HasOne("TaskGarden.Domain.Entities.TaskList", "TaskList")
                        .WithMany("TaskListItems")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompletedBy");

                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskListMember", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.TaskList", "TaskList")
                        .WithMany("TaskListAssignments")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "User")
                        .WithMany("TaskListMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.UserTaskListCategory", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.Category", "Category")
                        .WithMany("UserTaskListCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.TaskList", "TaskList")
                        .WithMany("UserCategories")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "User")
                        .WithMany("UserTaskListCategories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("TaskList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("TaskListMembers");

                    b.Navigation("UserTaskListCategories");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Category", b =>
                {
                    b.Navigation("TaskLists");

                    b.Navigation("UserTaskListCategories");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskList", b =>
                {
                    b.Navigation("TaskListAssignments");

                    b.Navigation("TaskListItems");

                    b.Navigation("UserCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
