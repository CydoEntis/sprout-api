// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskGarden.Infrastructure;

#nullable disable

namespace TaskGarden.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "23db6bf5-1bbd-478d-9b13-5e7d39b9adf7",
                            Email = "demo1@demo.com",
                            EmailConfirmed = false,
                            FirstName = "Demo",
                            LastName = "One",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEMO1@DEMO.COM",
                            NormalizedUserName = "DEMO1@DEMO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOQ3xIC3YXDJ6ezzInu4uZhl+7CRe22kaW+Zi2Nuki95d1uWbDg9cFzFk7xk6MWkdQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "de08e79d-4a53-4f97-a188-9928beeafd0c",
                            TwoFactorEnabled = false,
                            UserName = "demo1@demo.com"
                        },
                        new
                        {
                            Id = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b48e31f2-d0be-4ce2-add3-80fc5bee4a23",
                            Email = "demo2@demo.com",
                            EmailConfirmed = false,
                            FirstName = "Demo",
                            LastName = "Two",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEMO2@DEMO.COM",
                            NormalizedUserName = "DEMO2@DEMO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEkwhlXKwdaLZ4rR0CVDHF1swuXOkUoxtWMEED2cWwAezKoy+F4fProQ3zCiw1KLYg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "46166c3a-ccc7-41fb-9976-b11fd514ed54",
                            TwoFactorEnabled = false,
                            UserName = "demo2@demo.com"
                        },
                        new
                        {
                            Id = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "502307c2-48f8-461f-9efc-09205823864a",
                            Email = "demo3@demo.com",
                            EmailConfirmed = false,
                            FirstName = "Demo",
                            LastName = "Three",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEMO3@DEMO.COM",
                            NormalizedUserName = "DEMO3@DEMO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOGtq/sjmCRK5a2JdwgBK0c+dlrqjMepSkmxwOBk7lEPVdF1+cWqpIg26AZiQG3t4w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "01a6124c-ced6-4ea8-90ab-1458bc0748b0",
                            TwoFactorEnabled = false,
                            UserName = "demo3@demo.com"
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "lime",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1876),
                            Name = "Groceries",
                            Tag = "shopping-cart",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1882),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 2,
                            Color = "red",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1890),
                            Name = "Bills",
                            Tag = "banknote",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1891),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 3,
                            Color = "blue",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1894),
                            Name = "Entertainment",
                            Tag = "roller-coaster",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1894),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 4,
                            Color = "yellow",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1896),
                            Name = "Travel",
                            Tag = "plane",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1897),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 5,
                            Color = "grape",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1898),
                            Name = "School",
                            Tag = "university",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1899),
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835"
                        },
                        new
                        {
                            Id = 6,
                            Color = "cyan",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1901),
                            Name = "Groceries",
                            Tag = "shopping-cart",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1901),
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259"
                        },
                        new
                        {
                            Id = 7,
                            Color = "orange",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1902),
                            Name = "Bills",
                            Tag = "receipt",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1903),
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259"
                        },
                        new
                        {
                            Id = 8,
                            Color = "indigo",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1904),
                            Name = "Groceries",
                            Tag = "shopping-basket",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1904),
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00"
                        },
                        new
                        {
                            Id = 9,
                            Color = "teal",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1905),
                            Name = "Bills",
                            Tag = "hand-coins",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1906),
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00"
                        },
                        new
                        {
                            Id = 10,
                            Color = "pink",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1907),
                            Name = "Entertainment",
                            Tag = "theater",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(1907),
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00"
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvitedUserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InviterUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TaskListId")
                        .HasColumnType("integer");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("InviterUserId");

                    b.HasIndex("TaskListId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsVaild")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.ToTable("TaskLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2265),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "This week's shopping list for ShopRite",
                            IsCompleted = false,
                            Name = "ShopRite shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2265)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2269),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "This week's shopping list for Walmart",
                            IsCompleted = false,
                            Name = "Walmart shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2269)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2270),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Monthly rent payment reminders",
                            IsCompleted = false,
                            Name = "Rent payment",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2271)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2335),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Electricity bill payment reminders",
                            IsCompleted = false,
                            Name = "Electricity Bill",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2335)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2337),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "List of movies to watch this weekend",
                            IsCompleted = false,
                            Name = "Movie night",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2343)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2344),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Track upcoming concerts and events",
                            IsCompleted = false,
                            Name = "Concert Tickets",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2345)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2350),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Plan and book flights and hotels",
                            IsCompleted = false,
                            Name = "Vacation Planning",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2350)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2352),
                            CreatedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            Description = "Track deadlines for assignments",
                            IsCompleted = false,
                            Name = "Assignment Deadlines",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2352)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2353),
                            CreatedById = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            Description = "Weekly shopping list for Giant",
                            IsCompleted = false,
                            Name = "Giant shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2353)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2424),
                            CreatedById = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            Description = "Track Internet bill payments",
                            IsCompleted = false,
                            Name = "Internet Bill",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2424)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2425),
                            CreatedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            Description = "Grocery list for SuperMart",
                            IsCompleted = false,
                            Name = "SuperMart shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2426)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2427),
                            CreatedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            Description = "List of items for the local market",
                            IsCompleted = false,
                            Name = "Local Market shopping list",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2427)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2428),
                            CreatedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            Description = "Keep track of monthly mobile bills",
                            IsCompleted = false,
                            Name = "Mobile Bill",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2428)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2429),
                            CreatedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            Description = "List of fun things to do this weekend",
                            IsCompleted = false,
                            Name = "Weekend Fun Activities",
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2430)
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompletedById")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<int>("TaskListId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CompletedById");

                    b.HasIndex("TaskListId");

                    b.ToTable("TaskListItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2956),
                            Description = "Buy apples",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2957)
                        },
                        new
                        {
                            Id = 2,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2963),
                            Description = "Buy bananas",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2963)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2965),
                            Description = "Buy oranges",
                            IsCompleted = false,
                            Position = 3,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2965)
                        },
                        new
                        {
                            Id = 4,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2966),
                            Description = "Buy milk",
                            IsCompleted = true,
                            Position = 4,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2966)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2967),
                            Description = "Buy eggs",
                            IsCompleted = false,
                            Position = 5,
                            TaskListId = 1,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2967)
                        },
                        new
                        {
                            Id = 6,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2968),
                            Description = "Buy toothpaste",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2968)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2969),
                            Description = "Buy toothbrush",
                            IsCompleted = false,
                            Position = 2,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2970)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2970),
                            Description = "Buy shampoo",
                            IsCompleted = false,
                            Position = 3,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2970)
                        },
                        new
                        {
                            Id = 9,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2971),
                            Description = "Buy conditioner",
                            IsCompleted = true,
                            Position = 4,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2971)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2972),
                            Description = "Buy soap",
                            IsCompleted = false,
                            Position = 5,
                            TaskListId = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2973)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2973),
                            Description = "Pay rent",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 3,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2974)
                        },
                        new
                        {
                            Id = 12,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2974),
                            Description = "Confirm payment",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 3,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2975)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2976),
                            Description = "Pay electricity bill",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 4,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2976)
                        },
                        new
                        {
                            Id = 14,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2977),
                            Description = "Check bill amount",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 4,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2977)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2978),
                            Description = "Buy popcorn",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 5,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2978)
                        },
                        new
                        {
                            Id = 16,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2979),
                            Description = "Pick movie",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 5,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2979)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3011),
                            Description = "Prepare snacks",
                            IsCompleted = false,
                            Position = 3,
                            TaskListId = 5,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3012)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3013),
                            Description = "Buy concert tickets",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 6,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3013)
                        },
                        new
                        {
                            Id = 19,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3013),
                            Description = "Confirm concert date",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 6,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3014)
                        },
                        new
                        {
                            Id = 20,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3015),
                            Description = "Book flights",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 7,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3015)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3016),
                            Description = "Reserve hotel",
                            IsCompleted = false,
                            Position = 2,
                            TaskListId = 7,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3016)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3017),
                            Description = "Plan itinerary",
                            IsCompleted = false,
                            Position = 3,
                            TaskListId = 7,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3017)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3018),
                            Description = "Submit math assignment",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 8,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3018)
                        },
                        new
                        {
                            Id = 24,
                            CompletedById = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3019),
                            Description = "Submit history assignment",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 8,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3019)
                        },
                        new
                        {
                            Id = 25,
                            CompletedById = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3020),
                            Description = "Buy bread",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 9,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3020)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3021),
                            Description = "Buy butter",
                            IsCompleted = false,
                            Position = 2,
                            TaskListId = 9,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3021)
                        },
                        new
                        {
                            Id = 27,
                            CompletedById = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3022),
                            Description = "Pay internet bill",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 10,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3022)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3023),
                            Description = "Buy sugar",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 11,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3024)
                        },
                        new
                        {
                            Id = 29,
                            CompletedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3024),
                            Description = "Buy rice",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 11,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3025)
                        },
                        new
                        {
                            Id = 30,
                            CompletedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3025),
                            Description = "Buy tomatoes",
                            IsCompleted = true,
                            Position = 1,
                            TaskListId = 12,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3026)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3027),
                            Description = "Pay mobile bill",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 13,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3027)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3028),
                            Description = "Plan weekend trip",
                            IsCompleted = false,
                            Position = 1,
                            TaskListId = 14,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3028)
                        },
                        new
                        {
                            Id = 33,
                            CompletedById = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3028),
                            Description = "Book tickets",
                            IsCompleted = true,
                            Position = 2,
                            TaskListId = 14,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(3029)
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskListMember", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("TaskListId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "TaskListId");

                    b.HasIndex("TaskListId");

                    b.ToTable("TaskListMembers");

                    b.HasData(
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2789),
                            Id = 1,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2789)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2798),
                            Id = 2,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2798)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2799),
                            Id = 3,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2799)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2800),
                            Id = 4,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2800)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2801),
                            Id = 5,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2801)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 6,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2802),
                            Id = 6,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2802)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2803),
                            Id = 7,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2803)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2804),
                            Id = 8,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2804)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 9,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2805),
                            Id = 9,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2805)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2806),
                            Id = 10,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2806)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 11,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2807),
                            Id = 11,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2807)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 12,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2808),
                            Id = 12,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2808)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 13,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2809),
                            Id = 13,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2809)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 14,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2809),
                            Id = 14,
                            Role = 0,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2810)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2810),
                            Id = 15,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2811)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2811),
                            Id = 16,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2812)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2812),
                            Id = 17,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2812)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2813),
                            Id = 18,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2813)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2814),
                            Id = 19,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2814)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 6,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2815),
                            Id = 20,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2815)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2816),
                            Id = 21,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2816)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2817),
                            Id = 22,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2817)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 9,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2818),
                            Id = 23,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2818)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2819),
                            Id = 24,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2819)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 11,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2820),
                            Id = 25,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2820)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 12,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2821),
                            Id = 26,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2821)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 13,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2821),
                            Id = 27,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2822)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 14,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2822),
                            Id = 28,
                            Role = 2,
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2823)
                        });
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.UserTaskListCategory", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("TaskListId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "TaskListId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TaskListId");

                    b.ToTable("UserTaskListCategories");

                    b.HasData(
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2639),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2640)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2641),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2641)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2642),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2642)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2643),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2643)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 5,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2644),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2644)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 6,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2644),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2645)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 7,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2645),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2646)
                        },
                        new
                        {
                            UserId = "1b503418-dc0f-4187-93c0-2e30070b2835",
                            TaskListId = 8,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2646),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2646)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 9,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2647),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2647)
                        },
                        new
                        {
                            UserId = "9e22a16c-da04-4232-b479-95c3a7b89259",
                            TaskListId = 10,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2648),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2648)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 11,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2649),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2649)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 12,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2650),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2650)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 13,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2650),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2651)
                        },
                        new
                        {
                            UserId = "40fcec36-7eef-42d8-8086-cd2226b88d00",
                            TaskListId = 14,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2651),
                            UpdatedAt = new DateTime(2025, 3, 15, 3, 15, 46, 972, DateTimeKind.Utc).AddTicks(2651)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Category", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Invitation", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "InviterUser")
                        .WithMany()
                        .HasForeignKey("InviterUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.TaskList", "TaskList")
                        .WithMany()
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InviterUser");

                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Session", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskList", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.Category", null)
                        .WithMany("TaskLists")
                        .HasForeignKey("CategoryId");

                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskListItem", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "CompletedBy")
                        .WithMany()
                        .HasForeignKey("CompletedById");

                    b.HasOne("TaskGarden.Domain.Entities.TaskList", "TaskList")
                        .WithMany("TaskListItems")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompletedBy");

                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskListMember", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.TaskList", "TaskList")
                        .WithMany("TaskListAssignments")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "User")
                        .WithMany("TaskListMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.UserTaskListCategory", b =>
                {
                    b.HasOne("TaskGarden.Domain.Entities.Category", "Category")
                        .WithMany("UserTaskListCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.TaskList", "TaskList")
                        .WithMany("UserCategories")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskGarden.Domain.Entities.AppUser", "User")
                        .WithMany("UserTaskListCategories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("TaskList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("TaskListMembers");

                    b.Navigation("UserTaskListCategories");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.Category", b =>
                {
                    b.Navigation("TaskLists");

                    b.Navigation("UserTaskListCategories");
                });

            modelBuilder.Entity("TaskGarden.Domain.Entities.TaskList", b =>
                {
                    b.Navigation("TaskListAssignments");

                    b.Navigation("TaskListItems");

                    b.Navigation("UserCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
